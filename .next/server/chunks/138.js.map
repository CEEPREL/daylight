{"version":3,"file":"138.js","mappings":"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","sources":["webpack:///./app/components/welcome-toast.tsx","webpack:///./app/components/right-sidebar.tsx","webpack:///./app/layout.tsx","webpack:///./lib/db/schema.ts","webpack:///./lib/db/drizzle.ts","webpack:///./lib/db/queries.ts","webpack:///?bc69","webpack:///?a4f7","webpack:///?4948","webpack:///./app/globals.css","webpack:///?db39","webpack:///?6015","webpack:///./lib/utils.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect } from 'react';\nimport { toast } from 'sonner';\n\nexport function WelcomeToast() {\n  useEffect(() => {\n    if (!document.cookie.includes('email-toast=1')) {\n      toast('📩 Welcome to Next.js Emails!', {\n        duration: Infinity,\n        onDismiss: () =>\n          (document.cookie = 'email-toast=1; max-age=31536000; path=/'),\n        description: (\n          <p>\n            This is a demo of an email client UI with a Postgres database.{' '}\n            <a\n              href=\"https://vercel.com/templates/next.js/next-js-email-client\"\n              className=\"text-blue-600 hover:underline\"\n              target=\"_blank\"\n            >\n              Deploy your own\n            </a>\n            .\n          </p>\n        ),\n      });\n    }\n  }, []);\n\n  return null;\n}\n","import { getUserProfile } from '@/lib/db/queries';\nimport Image from 'next/image';\n\nexport async function RightSidebar({ userId }: { userId: number }) {\n  let user = await getUserProfile(userId);\n\n  if (!user) {\n    return null;\n  }\n\n  return (\n    <div className=\"hidden w-[350px] shrink-0 overflow-auto bg-neutral-50 p-6 sm:flex\">\n      <div className=\"max-w-md\">\n        <h2 className=\"mb-2 text-2xl font-bold\">{`${user.firstName} ${user.lastName}`}</h2>\n        <div className=\"mb-4 flex items-center\">\n          <img\n            src={user.avatarUrl || '/placeholder.svg?height=40&width=40'}\n            alt={`${user.firstName} ${user.lastName}`}\n            className=\"mr-4 h-10 w-10 rounded-full\"\n          />\n          <div>\n            <p className=\"text-blue-600\">{user.email}</p>\n            <p className=\"text-sm text-gray-600\">{user.location}</p>\n          </div>\n        </div>\n        <p className=\"mb-4 text-gray-700\">{`${user.jobTitle} at ${user.company}`}</p>\n\n        <h3 className=\"mb-2 font-semibold\">Mail</h3>\n        <ul className=\"mb-4 space-y-1 text-sm text-gray-600\">\n          {user.latestThreads.map((thread, index) => (\n            <li key={index}>{thread.subject}</li>\n          ))}\n        </ul>\n\n        <div className=\"space-y-2\">\n          {user.linkedin && (\n            <a\n              href={user.linkedin}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"flex items-center\"\n            >\n              <Image\n                src=\"/linkedin.svg\"\n                alt=\"LinkedIn\"\n                width={16}\n                height={16}\n                className=\"mr-2\"\n              />\n              <span className=\"text-sm\">LinkedIn</span>\n            </a>\n          )}\n          {user.twitter && (\n            <a\n              href={user.twitter}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"flex items-center\"\n            >\n              <Image\n                src=\"/x.svg\"\n                alt=\"X/Twitter\"\n                width={16}\n                height={16}\n                className=\"mr-2\"\n              />\n              <span className=\"text-sm\">Twitter/X</span>\n            </a>\n          )}\n          {user.github && (\n            <a\n              href={user.github}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"flex items-center\"\n            >\n              <Image\n                src=\"/github.svg\"\n                alt=\"GitHub\"\n                width={16}\n                height={16}\n                className=\"mr-2\"\n              />\n              <span className=\"text-sm\">GitHub</span>\n            </a>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import type { Metadata } from 'next';\nimport { Inter } from 'next/font/google';\nimport { Suspense } from 'react';\nimport { Toaster } from 'sonner';\nimport { RightSidebar } from './components/right-sidebar';\nimport { WelcomeToast } from './components/welcome-toast';\nimport './globals.css';\n\nconst inter = Inter({ subsets: ['latin'] });\n\nexport const metadata: Metadata = {\n  title: 'Next.js Mail',\n  description: 'An email client template using the Next.js App Router.',\n};\n\nexport default function RootLayout({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  return (\n    <html lang=\"en\" className={`bg-white text-gray-800 ${inter.className}`}>\n      <body className=\"flex h-screen\">\n        <main className=\"grow overflow-hidden\">{children}</main>\n        <Suspense fallback={<RightSidebarSkeleton />}>\n          <RightSidebar userId={1} />\n        </Suspense>\n        <Toaster closeButton />\n        <WelcomeToast />\n      </body>\n    </html>\n  );\n}\n\nfunction RightSidebarSkeleton() {\n  return (\n    <div className=\"hidden w-[350px] shrink-0 overflow-auto bg-neutral-50 p-6 sm:flex\" />\n  );\n}\n","import { relations } from 'drizzle-orm';\nimport {\n  index,\n  integer,\n  pgTable,\n  serial,\n  text,\n  timestamp,\n  uniqueIndex,\n  varchar,\n} from 'drizzle-orm/pg-core';\n\nexport const users = pgTable(\n  'users',\n  {\n    id: serial('id').primaryKey(),\n    firstName: varchar('first_name', { length: 50 }),\n    lastName: varchar('last_name', { length: 50 }),\n    email: varchar('email', { length: 255 }).notNull(),\n    jobTitle: varchar('job_title', { length: 100 }),\n    company: varchar('company', { length: 100 }),\n    location: varchar('location', { length: 100 }),\n    twitter: varchar('twitter', { length: 100 }),\n    linkedin: varchar('linkedin', { length: 100 }),\n    github: varchar('github', { length: 100 }),\n    avatarUrl: varchar('avatar_url', { length: 255 }),\n  },\n  (table) => {\n    return {\n      emailIndex: uniqueIndex('email_idx').on(table.email),\n    };\n  },\n);\n\nexport const threads = pgTable('threads', {\n  id: serial('id').primaryKey(),\n  subject: varchar('subject', { length: 255 }),\n  lastActivityDate: timestamp('last_activity_date').defaultNow(),\n});\n\nexport const emails = pgTable(\n  'emails',\n  {\n    id: serial('id').primaryKey(),\n    threadId: integer('thread_id').references(() => threads.id),\n    senderId: integer('sender_id').references(() => users.id),\n    recipientId: integer('recipient_id').references(() => users.id),\n    subject: varchar('subject', { length: 255 }),\n    body: text('body'),\n    sentDate: timestamp('sent_date').defaultNow(),\n  },\n  (table) => {\n    return {\n      threadIdIndex: index('thread_id_idx').on(table.threadId),\n      senderIdIndex: index('sender_id_idx').on(table.senderId),\n      recipientIdIndex: index('recipient_id_idx').on(table.recipientId),\n      sentDateIndex: index('sent_date_idx').on(table.sentDate),\n    };\n  },\n);\n\nexport const folders = pgTable('folders', {\n  id: serial('id').primaryKey(),\n  name: varchar('name', { length: 50 }).notNull(),\n});\n\nexport const userFolders = pgTable('user_folders', {\n  id: serial('id').primaryKey(),\n  userId: integer('user_id').references(() => users.id),\n  folderId: integer('folder_id').references(() => folders.id),\n});\n\nexport const threadFolders = pgTable('thread_folders', {\n  id: serial('id').primaryKey(),\n  threadId: integer('thread_id').references(() => threads.id),\n  folderId: integer('folder_id').references(() => folders.id),\n});\n\nexport const usersRelations = relations(users, ({ many }) => ({\n  sentEmails: many(emails, { relationName: 'sender' }),\n  receivedEmails: many(emails, { relationName: 'recipient' }),\n  userFolders: many(userFolders),\n}));\n\nexport const threadsRelations = relations(threads, ({ many }) => ({\n  emails: many(emails),\n  threadFolders: many(threadFolders),\n}));\n\nexport const emailsRelations = relations(emails, ({ one }) => ({\n  thread: one(threads, {\n    fields: [emails.threadId],\n    references: [threads.id],\n  }),\n  sender: one(users, {\n    fields: [emails.senderId],\n    references: [users.id],\n    relationName: 'sender',\n  }),\n  recipient: one(users, {\n    fields: [emails.recipientId],\n    references: [users.id],\n    relationName: 'recipient',\n  }),\n}));\n\nexport const foldersRelations = relations(folders, ({ many }) => ({\n  userFolders: many(userFolders),\n  threadFolders: many(threadFolders),\n}));\n\nexport const userFoldersRelations = relations(userFolders, ({ one }) => ({\n  user: one(users, { fields: [userFolders.userId], references: [users.id] }),\n  folder: one(folders, {\n    fields: [userFolders.folderId],\n    references: [folders.id],\n  }),\n}));\n\nexport const threadFoldersRelations = relations(threadFolders, ({ one }) => ({\n  thread: one(threads, {\n    fields: [threadFolders.threadId],\n    references: [threads.id],\n  }),\n  folder: one(folders, {\n    fields: [threadFolders.folderId],\n    references: [folders.id],\n  }),\n}));\n","import dotenv from 'dotenv';\nimport { drizzle } from 'drizzle-orm/postgres-js';\nimport postgres from 'postgres';\nimport * as schema from './schema';\n\ndotenv.config();\n\nif (!process.env.POSTGRES_URL) {\n  throw new Error('POSTGRES_URL environment variable is not set');\n}\n\nexport const client = postgres(process.env.POSTGRES_URL);\nexport const db = drizzle(client, { schema });\n","import { and, desc, eq, ilike, or, sql } from 'drizzle-orm';\nimport { toTitleCase } from '../utils';\nimport { db } from './drizzle';\nimport { emails, folders, threadFolders, threads, users } from './schema';\n\ntype Folder = {\n  name: string;\n  thread_count: number;\n};\n\nexport async function getFoldersWithThreadCount() {\n  'use cache';\n\n  let foldersWithCount = await db\n    .select({\n      name: folders.name,\n      thread_count: sql<number>`count(${threadFolders.threadId})`.as(\n        'thread_count',\n      ),\n    })\n    .from(folders)\n    .leftJoin(threadFolders, eq(folders.id, threadFolders.folderId))\n    .groupBy(folders.name);\n\n  let specialFoldersOrder = ['Inbox', 'Flagged', 'Sent'];\n  let specialFolders = specialFoldersOrder\n    .map((name) => foldersWithCount.find((folder) => folder.name === name))\n    .filter(Boolean) as Folder[];\n  let otherFolders = foldersWithCount.filter(\n    (folder) => !specialFoldersOrder.includes(folder.name),\n  ) as Folder[];\n\n  return { specialFolders, otherFolders };\n}\n\nexport async function getThreadsForFolder(folderName: string) {\n  'use cache';\n\n  let originalFolderName = toTitleCase(decodeURIComponent(folderName));\n\n  const threadsWithEmails = await db\n    .select({\n      id: threads.id,\n      subject: threads.subject,\n      lastActivityDate: threads.lastActivityDate,\n      emails: sql<\n        {\n          id: number;\n          senderId: number;\n          recipientId: number;\n          subject: string;\n          body: string;\n          sentDate: Date;\n          sender: {\n            id: number;\n            firstName: string;\n            lastName: string;\n            email: string;\n          };\n        }[]\n      >`json_agg(json_build_object(\n        'id', ${emails.id},\n        'senderId', ${emails.senderId},\n        'recipientId', ${emails.recipientId},\n        'subject', ${emails.subject},\n        'body', ${emails.body},\n        'sentDate', ${emails.sentDate},\n        'sender', json_build_object(\n          'id', ${users.id},\n          'firstName', ${users.firstName},\n          'lastName', ${users.lastName},\n          'email', ${users.email}\n        )\n      ) ORDER BY ${emails.sentDate} DESC)`,\n    })\n    .from(threads)\n    .innerJoin(threadFolders, eq(threads.id, threadFolders.threadId))\n    .innerJoin(folders, eq(threadFolders.folderId, folders.id))\n    .innerJoin(emails, eq(threads.id, emails.threadId))\n    .innerJoin(users, eq(emails.senderId, users.id))\n    .where(eq(folders.name, originalFolderName))\n    .groupBy(threads.id)\n    .orderBy(desc(threads.lastActivityDate));\n\n  return threadsWithEmails;\n}\n\nexport async function searchThreads(search: string | undefined) {\n  if (!search) {\n    return [];\n  }\n\n  const results = await db\n    .select({\n      id: threads.id,\n      subject: threads.subject,\n      lastActivityDate: threads.lastActivityDate,\n      folderName: folders.name,\n      emailId: emails.id,\n      emailSubject: emails.subject,\n      emailBody: emails.body,\n      emailSentDate: emails.sentDate,\n      senderFirstName: users.firstName,\n      senderLastName: users.lastName,\n      senderEmail: users.email,\n    })\n    .from(threads)\n    .innerJoin(emails, eq(threads.id, emails.threadId))\n    .innerJoin(users, eq(emails.senderId, users.id))\n    .leftJoin(threadFolders, eq(threads.id, threadFolders.threadId))\n    .leftJoin(folders, eq(threadFolders.folderId, folders.id))\n    .where(\n      or(\n        ilike(users.firstName, `%${search}%`),\n        ilike(users.lastName, `%${search}%`),\n        ilike(users.email, `%${search}%`),\n        ilike(threads.subject, `%${search}%`),\n        ilike(emails.body, `%${search}%`),\n      ),\n    )\n    .orderBy(desc(threads.lastActivityDate), desc(emails.sentDate));\n\n  const threadMap = new Map();\n  for (const result of results) {\n    if (!threadMap.has(result.id)) {\n      threadMap.set(result.id, {\n        id: result.id,\n        subject: result.subject,\n        lastActivityDate: result.lastActivityDate,\n        folderName: result.folderName,\n        latestEmail: {\n          id: result.emailId,\n          subject: result.emailSubject,\n          body: result.emailBody,\n          sentDate: result.emailSentDate,\n          sender: {\n            firstName: result.senderFirstName,\n            lastName: result.senderLastName,\n            email: result.senderEmail,\n          },\n        },\n      });\n    }\n  }\n\n  return Array.from(threadMap.values());\n}\n\nexport async function getThreadInFolder(folderName: string, threadId: string) {\n  'use cache';\n\n  let originalFolderName = toTitleCase(decodeURIComponent(folderName));\n  let result = await db\n    .select({\n      id: threads.id,\n      subject: threads.subject,\n      lastActivityDate: threads.lastActivityDate,\n      senderFirstName: users.firstName,\n      senderLastName: users.lastName,\n      senderEmail: users.email,\n    })\n    .from(threads)\n    .innerJoin(threadFolders, eq(threads.id, threadFolders.threadId))\n    .innerJoin(folders, eq(threadFolders.folderId, folders.id))\n    .innerJoin(emails, eq(threads.id, emails.threadId))\n    .innerJoin(users, eq(emails.senderId, users.id))\n    .where(\n      and(\n        eq(folders.name, originalFolderName),\n        eq(threads.id, parseInt(threadId)),\n      ),\n    );\n\n  return result[0];\n}\n\nexport async function getEmailsForThread(threadId: string) {\n  'use cache';\n\n  const result = await db\n    .select({\n      id: threads.id,\n      subject: threads.subject,\n      emailId: emails.id,\n      body: emails.body,\n      sentDate: emails.sentDate,\n      senderId: users.id,\n      senderFirstName: users.firstName,\n      senderLastName: users.lastName,\n      recipientId: emails.recipientId,\n    })\n    .from(threads)\n    .innerJoin(emails, eq(threads.id, emails.threadId))\n    .innerJoin(users, eq(emails.senderId, users.id))\n    .where(eq(threads.id, parseInt(threadId, 10)))\n    .orderBy(emails.sentDate);\n\n  if (result.length === 0) {\n    return null;\n  }\n\n  const thread = {\n    id: result[0].id,\n    subject: result[0].subject,\n    emails: result.map((row) => ({\n      id: row.emailId,\n      body: row.body,\n      sentDate: row.sentDate,\n      sender: {\n        id: row.senderId,\n        firstName: row.senderFirstName,\n        lastName: row.senderLastName,\n      },\n      recipientId: row.recipientId,\n    })),\n  };\n\n  return thread;\n}\n\nexport async function getAllEmailAddresses() {\n  'use cache';\n\n  return db\n    .select({\n      firstName: users.firstName,\n      lastName: users.lastName,\n      email: users.email,\n    })\n    .from(users);\n}\n\nexport async function getUserProfile(userId: number) {\n  'use cache';\n\n  const userInfo = await db\n    .select({\n      id: users.id,\n      firstName: users.firstName,\n      lastName: users.lastName,\n      email: users.email,\n      jobTitle: users.jobTitle,\n      company: users.company,\n      location: users.location,\n      avatarUrl: users.avatarUrl,\n      linkedin: users.linkedin,\n      twitter: users.twitter,\n      github: users.github,\n    })\n    .from(users)\n    .where(eq(users.id, userId))\n    .limit(1)\n    .execute();\n\n  if (userInfo.length === 0) {\n    return null;\n  }\n\n  const latestThreads = await db\n    .select({\n      subject: threads.subject,\n    })\n    .from(threads)\n    .innerJoin(emails, eq(emails.threadId, threads.id))\n    .where(eq(emails.senderId, userId))\n    .orderBy(desc(threads.lastActivityDate))\n    .limit(3)\n    .execute();\n\n  return {\n    ...userInfo[0],\n    latestThreads,\n  };\n}\n","import(/* webpackMode: \"eager\" */ \"/Users/macbookpro/Documents/ceeprel/daylight/node_modules/next/dist/client/components/client-page.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/macbookpro/Documents/ceeprel/daylight/node_modules/next/dist/client/components/client-segment.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/macbookpro/Documents/ceeprel/daylight/node_modules/next/dist/client/components/error-boundary.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/macbookpro/Documents/ceeprel/daylight/node_modules/next/dist/client/components/http-access-fallback/error-boundary.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/macbookpro/Documents/ceeprel/daylight/node_modules/next/dist/client/components/layout-router.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/macbookpro/Documents/ceeprel/daylight/node_modules/next/dist/client/components/metadata/async-metadata.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/macbookpro/Documents/ceeprel/daylight/node_modules/next/dist/client/components/metadata/metadata-boundary.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/macbookpro/Documents/ceeprel/daylight/node_modules/next/dist/client/components/render-from-template-context.js\");\n","import(/* webpackMode: \"eager\", webpackExports: [\"WelcomeToast\"] */ \"/Users/macbookpro/Documents/ceeprel/daylight/app/components/welcome-toast.tsx\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/macbookpro/Documents/ceeprel/daylight/node_modules/next/dist/client/image-component.js\");\n;\nimport(/* webpackMode: \"eager\", webpackExports: [\"Toaster\"] */ \"/Users/macbookpro/Documents/ceeprel/daylight/node_modules/sonner/dist/index.mjs\");\n","\nexport { $$RSC_SERVER_CACHE_0 as \"807ddcce3e68b54b67e45e7f1191ce785198104fd9\" } from \"/Users/macbookpro/Documents/ceeprel/daylight/lib/db/queries.ts\"\nexport { $$RSC_SERVER_CACHE_4 as \"80a9d5dcd76bc6dd0ce39afbbeea3828d8ddd27b84\" } from \"/Users/macbookpro/Documents/ceeprel/daylight/lib/db/queries.ts\"\nexport { $$RSC_SERVER_CACHE_3 as \"c009fab3842f6e93501fd21a2badcbb33e6006cfc1\" } from \"/Users/macbookpro/Documents/ceeprel/daylight/lib/db/queries.ts\"\nexport { $$RSC_SERVER_CACHE_5 as \"c0487837937f2c1507543df8e80a274586253bb0de\" } from \"/Users/macbookpro/Documents/ceeprel/daylight/lib/db/queries.ts\"\nexport { $$RSC_SERVER_CACHE_1 as \"c0ec4f74def46f408cb59c291f75e300767d5e4406\" } from \"/Users/macbookpro/Documents/ceeprel/daylight/lib/db/queries.ts\"\nexport { $$RSC_SERVER_CACHE_2 as \"e000042a2cc3f0e7fd9f58784a63140d86dbe47ca6\" } from \"/Users/macbookpro/Documents/ceeprel/daylight/lib/db/queries.ts\"\n",null,"import(/* webpackMode: \"eager\", webpackExports: [\"WelcomeToast\"] */ \"/Users/macbookpro/Documents/ceeprel/daylight/app/components/welcome-toast.tsx\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/macbookpro/Documents/ceeprel/daylight/node_modules/next/dist/client/image-component.js\");\n;\nimport(/* webpackMode: \"eager\", webpackExports: [\"Toaster\"] */ \"/Users/macbookpro/Documents/ceeprel/daylight/node_modules/sonner/dist/index.mjs\");\n","import(/* webpackMode: \"eager\" */ \"/Users/macbookpro/Documents/ceeprel/daylight/node_modules/next/dist/client/components/client-page.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/macbookpro/Documents/ceeprel/daylight/node_modules/next/dist/client/components/client-segment.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/macbookpro/Documents/ceeprel/daylight/node_modules/next/dist/client/components/error-boundary.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/macbookpro/Documents/ceeprel/daylight/node_modules/next/dist/client/components/http-access-fallback/error-boundary.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/macbookpro/Documents/ceeprel/daylight/node_modules/next/dist/client/components/layout-router.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/macbookpro/Documents/ceeprel/daylight/node_modules/next/dist/client/components/metadata/async-metadata.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/macbookpro/Documents/ceeprel/daylight/node_modules/next/dist/client/components/metadata/metadata-boundary.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/macbookpro/Documents/ceeprel/daylight/node_modules/next/dist/client/components/render-from-template-context.js\");\n","import { clsx, type ClassValue } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\nexport function formatEmailString(\n  userEmail: {\n    firstName: string | null;\n    lastName: string | null;\n    email: string;\n  },\n  opts: { includeFullEmail: boolean } = { includeFullEmail: false },\n) {\n  if (userEmail.firstName && userEmail.lastName) {\n    return `${userEmail.firstName} ${userEmail.lastName} ${\n      opts.includeFullEmail ? `<${userEmail.email}>` : ''\n    }`;\n  }\n  return userEmail.email;\n}\n\nexport function toTitleCase(str: string) {\n  return str.replace(/\\w\\S*/g, function (txt: string) {\n    return txt.charAt(0).toUpperCase() + txt.substring(1).toLowerCase();\n  });\n}\n\nexport function highlightText(text: string, query: string | undefined) {\n  if (!query) return text;\n  const parts = text.split(new RegExp(`(${query})`, 'gi'));\n\n  return parts.map((part, i) =>\n    part.toLowerCase() === query.toLowerCase() ? (\n      <mark key={i} className=\"bg-yellow-200 text-black\">\n        {part}\n      </mark>\n    ) : (\n      part\n    ),\n  );\n}\n"],"names":["WelcomeToast","RightSidebar","userId","user","getUserProfile","div","className","h2","firstName","lastName","img","src","avatarUrl","alt","p","email","location","jobTitle","company","h3","ul","latestThreads","map","thread","index","li","subject","linkedin","a","href","target","rel","Image","width","height","span","twitter","github","metadata","title","description","RootLayout","children","html","lang","inter","body","main","Suspense","fallback","RightSidebarSkeleton","Toaster","closeButton","users","pgTable","id","serial","primaryKey","varchar","length","notNull","emailIndex","uniqueIndex","on","table","threads","lastActivityDate","timestamp","defaultNow","threadId","integer","references","senderId","recipientId","text","sentDate","threadIdIndex","senderIdIndex","recipientIdIndex","sentDateIndex","folders","name","folderId","relations","many","sentEmails","emails","relationName","receivedEmails","userFolders","threadsRelations","threadFolders","one","fields","sender","recipient","foldersRelations","userFoldersRelations","folder","threadFoldersRelations","dotenv","process","env","POSTGRES_URL","client","postgres","drizzle","schema","getFoldersWithThreadCount","foldersWithCount","db","sql","as","from","leftJoin","eq","specialFoldersOrder","specialFolders","find","filter","Boolean","otherFolders","includes","getThreadsForFolder","originalFolderName","toTitleCase","decodeURIComponent","folderName","innerJoin","where","groupBy","orderBy","desc","searchThreads","search","results","emailSubject","emailBody","emailSentDate","senderFirstName","senderLastName","senderEmail","or","ilike","threadMap","Map","result","has","set","latestEmail","emailId","Array","values","getThreadInFolder","and","parseInt","getEmailsForThread","select","row","getAllEmailAddresses","userInfo","limit","execute","formatEmailString","userEmail","opts","includeFullEmail","str","replace","txt","charAt","toUpperCase","substring","toLowerCase","highlightText","query","part","i","mark"],"sourceRoot":"","ignoreList":[]}