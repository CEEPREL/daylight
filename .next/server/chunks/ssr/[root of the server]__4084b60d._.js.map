{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/inter_59dee874.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"inter_59dee874-module__9CtR0q__className\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/inter_59dee874.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Inter%22,%22arguments%22:[{%22subsets%22:[%22latin%22]}],%22variableName%22:%22inter%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Inter', 'Inter Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,qJAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,qJAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,qJAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 53, "column": 0}, "map": {"version":3,"sources":["file:///Users/macbookpro/Documents/ceeprel/daylight/lib/utils.tsx"],"sourcesContent":["import { clsx, type ClassValue } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\nexport function formatEmailString(\n  userEmail: {\n    firstName: string | null;\n    lastName: string | null;\n    email: string;\n  },\n  opts: { includeFullEmail: boolean } = { includeFullEmail: false },\n) {\n  if (userEmail.firstName && userEmail.lastName) {\n    return `${userEmail.firstName} ${userEmail.lastName} ${\n      opts.includeFullEmail ? `<${userEmail.email}>` : ''\n    }`;\n  }\n  return userEmail.email;\n}\n\nexport function toTitleCase(str: string) {\n  return str.replace(/\\w\\S*/g, function (txt: string) {\n    return txt.charAt(0).toUpperCase() + txt.substring(1).toLowerCase();\n  });\n}\n\nexport function highlightText(text: string, query: string | undefined) {\n  if (!query) return text;\n  const parts = text.split(new RegExp(`(${query})`, 'gi'));\n\n  return parts.map((part, i) =>\n    part.toLowerCase() === query.toLowerCase() ? (\n      <mark key={i} className=\"bg-yellow-200 text-black\">\n        {part}\n      </mark>\n    ) : (\n      part\n    ),\n  );\n}\n"],"names":[],"mappings":";;;;;;;AAAA;AACA;;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB;AAEO,SAAS,kBACd,SAIC,EACD,OAAsC;IAAE,kBAAkB;AAAM,CAAC;IAEjE,IAAI,UAAU,SAAS,IAAI,UAAU,QAAQ,EAAE;QAC7C,OAAO,GAAG,UAAU,SAAS,CAAC,CAAC,EAAE,UAAU,QAAQ,CAAC,CAAC,EACnD,KAAK,gBAAgB,GAAG,CAAC,CAAC,EAAE,UAAU,KAAK,CAAC,CAAC,CAAC,GAAG,IACjD;IACJ;IACA,OAAO,UAAU,KAAK;AACxB;AAEO,SAAS,YAAY,GAAW;IACrC,OAAO,IAAI,OAAO,CAAC,UAAU,SAAU,GAAW;QAChD,OAAO,IAAI,MAAM,CAAC,GAAG,WAAW,KAAK,IAAI,SAAS,CAAC,GAAG,WAAW;IACnE;AACF;AAEO,SAAS,cAAc,IAAY,EAAE,KAAyB;IACnE,IAAI,CAAC,OAAO,OAAO;IACnB,MAAM,QAAQ,KAAK,KAAK,CAAC,IAAI,OAAO,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE;IAElD,OAAO,MAAM,GAAG,CAAC,CAAC,MAAM,IACtB,KAAK,WAAW,OAAO,MAAM,WAAW,mBACtC,8OAAC;YAAa,WAAU;sBACrB;WADQ;;;;mBAIX;AAGN","debugId":null}},
    {"offset": {"line": 155, "column": 0}, "map": {"version":3,"sources":["file:///Users/macbookpro/Documents/ceeprel/daylight/lib/db/schema.ts"],"sourcesContent":["import { relations } from 'drizzle-orm';\nimport {\n  index,\n  integer,\n  pgTable,\n  serial,\n  text,\n  timestamp,\n  uniqueIndex,\n  varchar,\n} from 'drizzle-orm/pg-core';\n\nexport const users = pgTable(\n  'users',\n  {\n    id: serial('id').primaryKey(),\n    firstName: varchar('first_name', { length: 50 }),\n    lastName: varchar('last_name', { length: 50 }),\n    email: varchar('email', { length: 255 }).notNull(),\n    jobTitle: varchar('job_title', { length: 100 }),\n    company: varchar('company', { length: 100 }),\n    location: varchar('location', { length: 100 }),\n    twitter: varchar('twitter', { length: 100 }),\n    linkedin: varchar('linkedin', { length: 100 }),\n    github: varchar('github', { length: 100 }),\n    avatarUrl: varchar('avatar_url', { length: 255 }),\n  },\n  (table) => {\n    return {\n      emailIndex: uniqueIndex('email_idx').on(table.email),\n    };\n  },\n);\n\nexport const threads = pgTable('threads', {\n  id: serial('id').primaryKey(),\n  subject: varchar('subject', { length: 255 }),\n  lastActivityDate: timestamp('last_activity_date').defaultNow(),\n});\n\nexport const emails = pgTable(\n  'emails',\n  {\n    id: serial('id').primaryKey(),\n    threadId: integer('thread_id').references(() => threads.id),\n    senderId: integer('sender_id').references(() => users.id),\n    recipientId: integer('recipient_id').references(() => users.id),\n    subject: varchar('subject', { length: 255 }),\n    body: text('body'),\n    sentDate: timestamp('sent_date').defaultNow(),\n  },\n  (table) => {\n    return {\n      threadIdIndex: index('thread_id_idx').on(table.threadId),\n      senderIdIndex: index('sender_id_idx').on(table.senderId),\n      recipientIdIndex: index('recipient_id_idx').on(table.recipientId),\n      sentDateIndex: index('sent_date_idx').on(table.sentDate),\n    };\n  },\n);\n\nexport const folders = pgTable('folders', {\n  id: serial('id').primaryKey(),\n  name: varchar('name', { length: 50 }).notNull(),\n});\n\nexport const userFolders = pgTable('user_folders', {\n  id: serial('id').primaryKey(),\n  userId: integer('user_id').references(() => users.id),\n  folderId: integer('folder_id').references(() => folders.id),\n});\n\nexport const threadFolders = pgTable('thread_folders', {\n  id: serial('id').primaryKey(),\n  threadId: integer('thread_id').references(() => threads.id),\n  folderId: integer('folder_id').references(() => folders.id),\n});\n\nexport const usersRelations = relations(users, ({ many }) => ({\n  sentEmails: many(emails, { relationName: 'sender' }),\n  receivedEmails: many(emails, { relationName: 'recipient' }),\n  userFolders: many(userFolders),\n}));\n\nexport const threadsRelations = relations(threads, ({ many }) => ({\n  emails: many(emails),\n  threadFolders: many(threadFolders),\n}));\n\nexport const emailsRelations = relations(emails, ({ one }) => ({\n  thread: one(threads, {\n    fields: [emails.threadId],\n    references: [threads.id],\n  }),\n  sender: one(users, {\n    fields: [emails.senderId],\n    references: [users.id],\n    relationName: 'sender',\n  }),\n  recipient: one(users, {\n    fields: [emails.recipientId],\n    references: [users.id],\n    relationName: 'recipient',\n  }),\n}));\n\nexport const foldersRelations = relations(folders, ({ many }) => ({\n  userFolders: many(userFolders),\n  threadFolders: many(threadFolders),\n}));\n\nexport const userFoldersRelations = relations(userFolders, ({ one }) => ({\n  user: one(users, { fields: [userFolders.userId], references: [users.id] }),\n  folder: one(folders, {\n    fields: [userFolders.folderId],\n    references: [folders.id],\n  }),\n}));\n\nexport const threadFoldersRelations = relations(threadFolders, ({ one }) => ({\n  thread: one(threads, {\n    fields: [threadFolders.threadId],\n    references: [threads.id],\n  }),\n  folder: one(folders, {\n    fields: [threadFolders.folderId],\n    references: [folders.id],\n  }),\n}));\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 344, "column": 0}, "map": {"version":3,"sources":["file:///Users/macbookpro/Documents/ceeprel/daylight/lib/db/drizzle.ts"],"sourcesContent":["import dotenv from 'dotenv';\nimport { drizzle } from 'drizzle-orm/postgres-js';\nimport postgres from 'postgres';\nimport * as schema from './schema';\n\ndotenv.config();\n\nif (!process.env.POSTGRES_URL) {\n  throw new Error('POSTGRES_URL environment variable is not set');\n}\n\nexport const client = postgres(process.env.POSTGRES_URL);\nexport const db = drizzle(client, { schema });\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;AAEA,qIAAA,CAAA,UAAM,CAAC,MAAM;AAEb,IAAI,CAAC,QAAQ,GAAG,CAAC,YAAY,EAAE;IAC7B,MAAM,IAAI,MAAM;AAClB;AAEO,MAAM,SAAS,CAAA,GAAA,wIAAA,CAAA,UAAQ,AAAD,EAAE,QAAQ,GAAG,CAAC,YAAY;AAChD,MAAM,KAAK,CAAA,GAAA,0JAAA,CAAA,UAAO,AAAD,EAAE,QAAQ;IAAE,QAAA;AAAO","debugId":null}},
    {"offset": {"line": 370, "column": 0}, "map": {"version":3,"sources":["file:///Users/macbookpro/Documents/ceeprel/daylight/lib/db/queries.ts"],"sourcesContent":["import { and, desc, eq, ilike, or, sql } from 'drizzle-orm';\nimport { toTitleCase } from '../utils';\nimport { db } from './drizzle';\nimport { emails, folders, threadFolders, threads, users } from './schema';\n\ntype Folder = {\n  name: string;\n  thread_count: number;\n};\n\nexport async function getFoldersWithThreadCount() {\n  'use cache';\n\n  let foldersWithCount = await db\n    .select({\n      name: folders.name,\n      thread_count: sql<number>`count(${threadFolders.threadId})`.as(\n        'thread_count',\n      ),\n    })\n    .from(folders)\n    .leftJoin(threadFolders, eq(folders.id, threadFolders.folderId))\n    .groupBy(folders.name);\n\n  let specialFoldersOrder = ['Inbox', 'Flagged', 'Sent'];\n  let specialFolders = specialFoldersOrder\n    .map((name) => foldersWithCount.find((folder) => folder.name === name))\n    .filter(Boolean) as Folder[];\n  let otherFolders = foldersWithCount.filter(\n    (folder) => !specialFoldersOrder.includes(folder.name),\n  ) as Folder[];\n\n  return { specialFolders, otherFolders };\n}\n\nexport async function getThreadsForFolder(folderName: string) {\n  'use cache';\n\n  let originalFolderName = toTitleCase(decodeURIComponent(folderName));\n\n  const threadsWithEmails = await db\n    .select({\n      id: threads.id,\n      subject: threads.subject,\n      lastActivityDate: threads.lastActivityDate,\n      emails: sql<\n        {\n          id: number;\n          senderId: number;\n          recipientId: number;\n          subject: string;\n          body: string;\n          sentDate: Date;\n          sender: {\n            id: number;\n            firstName: string;\n            lastName: string;\n            email: string;\n          };\n        }[]\n      >`json_agg(json_build_object(\n        'id', ${emails.id},\n        'senderId', ${emails.senderId},\n        'recipientId', ${emails.recipientId},\n        'subject', ${emails.subject},\n        'body', ${emails.body},\n        'sentDate', ${emails.sentDate},\n        'sender', json_build_object(\n          'id', ${users.id},\n          'firstName', ${users.firstName},\n          'lastName', ${users.lastName},\n          'email', ${users.email}\n        )\n      ) ORDER BY ${emails.sentDate} DESC)`,\n    })\n    .from(threads)\n    .innerJoin(threadFolders, eq(threads.id, threadFolders.threadId))\n    .innerJoin(folders, eq(threadFolders.folderId, folders.id))\n    .innerJoin(emails, eq(threads.id, emails.threadId))\n    .innerJoin(users, eq(emails.senderId, users.id))\n    .where(eq(folders.name, originalFolderName))\n    .groupBy(threads.id)\n    .orderBy(desc(threads.lastActivityDate));\n\n  return threadsWithEmails;\n}\n\nexport async function searchThreads(search: string | undefined) {\n  if (!search) {\n    return [];\n  }\n\n  const results = await db\n    .select({\n      id: threads.id,\n      subject: threads.subject,\n      lastActivityDate: threads.lastActivityDate,\n      folderName: folders.name,\n      emailId: emails.id,\n      emailSubject: emails.subject,\n      emailBody: emails.body,\n      emailSentDate: emails.sentDate,\n      senderFirstName: users.firstName,\n      senderLastName: users.lastName,\n      senderEmail: users.email,\n    })\n    .from(threads)\n    .innerJoin(emails, eq(threads.id, emails.threadId))\n    .innerJoin(users, eq(emails.senderId, users.id))\n    .leftJoin(threadFolders, eq(threads.id, threadFolders.threadId))\n    .leftJoin(folders, eq(threadFolders.folderId, folders.id))\n    .where(\n      or(\n        ilike(users.firstName, `%${search}%`),\n        ilike(users.lastName, `%${search}%`),\n        ilike(users.email, `%${search}%`),\n        ilike(threads.subject, `%${search}%`),\n        ilike(emails.body, `%${search}%`),\n      ),\n    )\n    .orderBy(desc(threads.lastActivityDate), desc(emails.sentDate));\n\n  const threadMap = new Map();\n  for (const result of results) {\n    if (!threadMap.has(result.id)) {\n      threadMap.set(result.id, {\n        id: result.id,\n        subject: result.subject,\n        lastActivityDate: result.lastActivityDate,\n        folderName: result.folderName,\n        latestEmail: {\n          id: result.emailId,\n          subject: result.emailSubject,\n          body: result.emailBody,\n          sentDate: result.emailSentDate,\n          sender: {\n            firstName: result.senderFirstName,\n            lastName: result.senderLastName,\n            email: result.senderEmail,\n          },\n        },\n      });\n    }\n  }\n\n  return Array.from(threadMap.values());\n}\n\nexport async function getThreadInFolder(folderName: string, threadId: string) {\n  'use cache';\n\n  let originalFolderName = toTitleCase(decodeURIComponent(folderName));\n  let result = await db\n    .select({\n      id: threads.id,\n      subject: threads.subject,\n      lastActivityDate: threads.lastActivityDate,\n      senderFirstName: users.firstName,\n      senderLastName: users.lastName,\n      senderEmail: users.email,\n    })\n    .from(threads)\n    .innerJoin(threadFolders, eq(threads.id, threadFolders.threadId))\n    .innerJoin(folders, eq(threadFolders.folderId, folders.id))\n    .innerJoin(emails, eq(threads.id, emails.threadId))\n    .innerJoin(users, eq(emails.senderId, users.id))\n    .where(\n      and(\n        eq(folders.name, originalFolderName),\n        eq(threads.id, parseInt(threadId)),\n      ),\n    );\n\n  return result[0];\n}\n\nexport async function getEmailsForThread(threadId: string) {\n  'use cache';\n\n  const result = await db\n    .select({\n      id: threads.id,\n      subject: threads.subject,\n      emailId: emails.id,\n      body: emails.body,\n      sentDate: emails.sentDate,\n      senderId: users.id,\n      senderFirstName: users.firstName,\n      senderLastName: users.lastName,\n      recipientId: emails.recipientId,\n    })\n    .from(threads)\n    .innerJoin(emails, eq(threads.id, emails.threadId))\n    .innerJoin(users, eq(emails.senderId, users.id))\n    .where(eq(threads.id, parseInt(threadId, 10)))\n    .orderBy(emails.sentDate);\n\n  if (result.length === 0) {\n    return null;\n  }\n\n  const thread = {\n    id: result[0].id,\n    subject: result[0].subject,\n    emails: result.map((row) => ({\n      id: row.emailId,\n      body: row.body,\n      sentDate: row.sentDate,\n      sender: {\n        id: row.senderId,\n        firstName: row.senderFirstName,\n        lastName: row.senderLastName,\n      },\n      recipientId: row.recipientId,\n    })),\n  };\n\n  return thread;\n}\n\nexport async function getAllEmailAddresses() {\n  'use cache';\n\n  return db\n    .select({\n      firstName: users.firstName,\n      lastName: users.lastName,\n      email: users.email,\n    })\n    .from(users);\n}\n\nexport async function getUserProfile(userId: number) {\n  'use cache';\n\n  const userInfo = await db\n    .select({\n      id: users.id,\n      firstName: users.firstName,\n      lastName: users.lastName,\n      email: users.email,\n      jobTitle: users.jobTitle,\n      company: users.company,\n      location: users.location,\n      avatarUrl: users.avatarUrl,\n      linkedin: users.linkedin,\n      twitter: users.twitter,\n      github: users.github,\n    })\n    .from(users)\n    .where(eq(users.id, userId))\n    .limit(1)\n    .execute();\n\n  if (userInfo.length === 0) {\n    return null;\n  }\n\n  const latestThreads = await db\n    .select({\n      subject: threads.subject,\n    })\n    .from(threads)\n    .innerJoin(emails, eq(emails.threadId, threads.id))\n    .where(eq(emails.senderId, userId))\n    .orderBy(desc(threads.lastActivityDate))\n    .limit(3)\n    .execute();\n\n  return {\n    ...userInfo[0],\n    latestThreads,\n  };\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 594, "column": 0}, "map": {"version":3,"sources":["file:///Users/macbookpro/Documents/ceeprel/daylight/app/components/right-sidebar.tsx"],"sourcesContent":["import { getUserProfile } from '@/lib/db/queries';\nimport Image from 'next/image';\n\nexport async function RightSidebar({ userId }: { userId: number }) {\n  let user = await getUserProfile(userId);\n\n  if (!user) {\n    return null;\n  }\n\n  return (\n    <div className=\"hidden w-[350px] shrink-0 overflow-auto bg-neutral-50 p-6 sm:flex\">\n      <div className=\"max-w-md\">\n        <h2 className=\"mb-2 text-2xl font-bold\">{`${user.firstName} ${user.lastName}`}</h2>\n        <div className=\"mb-4 flex items-center\">\n          <img\n            src={user.avatarUrl || '/placeholder.svg?height=40&width=40'}\n            alt={`${user.firstName} ${user.lastName}`}\n            className=\"mr-4 h-10 w-10 rounded-full\"\n          />\n          <div>\n            <p className=\"text-blue-600\">{user.email}</p>\n            <p className=\"text-sm text-gray-600\">{user.location}</p>\n          </div>\n        </div>\n        <p className=\"mb-4 text-gray-700\">{`${user.jobTitle} at ${user.company}`}</p>\n\n        <h3 className=\"mb-2 font-semibold\">Mail</h3>\n        <ul className=\"mb-4 space-y-1 text-sm text-gray-600\">\n          {user.latestThreads.map((thread, index) => (\n            <li key={index}>{thread.subject}</li>\n          ))}\n        </ul>\n\n        <div className=\"space-y-2\">\n          {user.linkedin && (\n            <a\n              href={user.linkedin}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"flex items-center\"\n            >\n              <Image\n                src=\"/linkedin.svg\"\n                alt=\"LinkedIn\"\n                width={16}\n                height={16}\n                className=\"mr-2\"\n              />\n              <span className=\"text-sm\">LinkedIn</span>\n            </a>\n          )}\n          {user.twitter && (\n            <a\n              href={user.twitter}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"flex items-center\"\n            >\n              <Image\n                src=\"/x.svg\"\n                alt=\"X/Twitter\"\n                width={16}\n                height={16}\n                className=\"mr-2\"\n              />\n              <span className=\"text-sm\">Twitter/X</span>\n            </a>\n          )}\n          {user.github && (\n            <a\n              href={user.github}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"flex items-center\"\n            >\n              <Image\n                src=\"/github.svg\"\n                alt=\"GitHub\"\n                width={16}\n                height={16}\n                className=\"mr-2\"\n              />\n              <span className=\"text-sm\">GitHub</span>\n            </a>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEO,eAAe,aAAa,EAAE,MAAM,EAAsB;IAC/D,IAAI,OAAO,MAAM,CAAA,GAAA,oHAAA,CAAA,iBAAc,AAAD,EAAE;IAEhC,IAAI,CAAC,MAAM;QACT,OAAO;IACT;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAG,WAAU;8BAA2B,GAAG,KAAK,SAAS,CAAC,CAAC,EAAE,KAAK,QAAQ,EAAE;;;;;;8BAC7E,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BACC,KAAK,KAAK,SAAS,IAAI;4BACvB,KAAK,GAAG,KAAK,SAAS,CAAC,CAAC,EAAE,KAAK,QAAQ,EAAE;4BACzC,WAAU;;;;;;sCAEZ,8OAAC;;8CACC,8OAAC;oCAAE,WAAU;8CAAiB,KAAK,KAAK;;;;;;8CACxC,8OAAC;oCAAE,WAAU;8CAAyB,KAAK,QAAQ;;;;;;;;;;;;;;;;;;8BAGvD,8OAAC;oBAAE,WAAU;8BAAsB,GAAG,KAAK,QAAQ,CAAC,IAAI,EAAE,KAAK,OAAO,EAAE;;;;;;8BAExE,8OAAC;oBAAG,WAAU;8BAAqB;;;;;;8BACnC,8OAAC;oBAAG,WAAU;8BACX,KAAK,aAAa,CAAC,GAAG,CAAC,CAAC,QAAQ,sBAC/B,8OAAC;sCAAgB,OAAO,OAAO;2BAAtB;;;;;;;;;;8BAIb,8OAAC;oBAAI,WAAU;;wBACZ,KAAK,QAAQ,kBACZ,8OAAC;4BACC,MAAM,KAAK,QAAQ;4BACnB,QAAO;4BACP,KAAI;4BACJ,WAAU;;8CAEV,8OAAC,6HAAA,CAAA,UAAK;oCACJ,KAAI;oCACJ,KAAI;oCACJ,OAAO;oCACP,QAAQ;oCACR,WAAU;;;;;;8CAEZ,8OAAC;oCAAK,WAAU;8CAAU;;;;;;;;;;;;wBAG7B,KAAK,OAAO,kBACX,8OAAC;4BACC,MAAM,KAAK,OAAO;4BAClB,QAAO;4BACP,KAAI;4BACJ,WAAU;;8CAEV,8OAAC,6HAAA,CAAA,UAAK;oCACJ,KAAI;oCACJ,KAAI;oCACJ,OAAO;oCACP,QAAQ;oCACR,WAAU;;;;;;8CAEZ,8OAAC;oCAAK,WAAU;8CAAU;;;;;;;;;;;;wBAG7B,KAAK,MAAM,kBACV,8OAAC;4BACC,MAAM,KAAK,MAAM;4BACjB,QAAO;4BACP,KAAI;4BACJ,WAAU;;8CAEV,8OAAC,6HAAA,CAAA,UAAK;oCACJ,KAAI;oCACJ,KAAI;oCACJ,OAAO;oCACP,QAAQ;oCACR,WAAU;;;;;;8CAEZ,8OAAC;oCAAK,WAAU;8CAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOxC","debugId":null}},
    {"offset": {"line": 813, "column": 0}, "map": {"version":3,"sources":["file:///Users/macbookpro/Documents/ceeprel/daylight/app/components/welcome-toast.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const WelcomeToast = registerClientReference(\n    function() { throw new Error(\"Attempted to call WelcomeToast() from the server but WelcomeToast is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/components/welcome-toast.tsx <module evaluation>\",\n    \"WelcomeToast\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,kEACA","debugId":null}},
    {"offset": {"line": 827, "column": 0}, "map": {"version":3,"sources":["file:///Users/macbookpro/Documents/ceeprel/daylight/app/components/welcome-toast.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const WelcomeToast = registerClientReference(\n    function() { throw new Error(\"Attempted to call WelcomeToast() from the server but WelcomeToast is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/components/welcome-toast.tsx\",\n    \"WelcomeToast\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,8CACA","debugId":null}},
    {"offset": {"line": 841, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 851, "column": 0}, "map": {"version":3,"sources":["file:///Users/macbookpro/Documents/ceeprel/daylight/app/layout.tsx"],"sourcesContent":["import type { Metadata } from 'next';\nimport { Inter } from 'next/font/google';\nimport { Suspense } from 'react';\nimport { Toaster } from 'sonner';\nimport { RightSidebar } from './components/right-sidebar';\nimport { WelcomeToast } from './components/welcome-toast';\nimport './globals.css';\n\nconst inter = Inter({ subsets: ['latin'] });\n\nexport const metadata: Metadata = {\n  title: 'Next.js Mail',\n  description: 'An email client template using the Next.js App Router.',\n};\n\nexport default function RootLayout({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  return (\n    <html lang=\"en\" className={`bg-white text-gray-800 ${inter.className}`}>\n      <body className=\"flex h-screen\">\n        <main className=\"grow overflow-hidden\">{children}</main>\n        <Suspense fallback={<RightSidebarSkeleton />}>\n          <RightSidebar userId={1} />\n        </Suspense>\n        <Toaster closeButton />\n        <WelcomeToast />\n      </body>\n    </html>\n  );\n}\n\nfunction RightSidebarSkeleton() {\n  return (\n    <div className=\"hidden w-[350px] shrink-0 overflow-auto bg-neutral-50 p-6 sm:flex\" />\n  );\n}\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AACA;AACA;;;;;;;;AAKO,MAAM,WAAqB;IAChC,OAAO;IACP,aAAa;AACf;AAEe,SAAS,WAAW,EACjC,QAAQ,EAGT;IACC,qBACE,8OAAC;QAAK,MAAK;QAAK,WAAW,CAAC,uBAAuB,EAAE,yIAAA,CAAA,UAAK,CAAC,SAAS,EAAE;kBACpE,cAAA,8OAAC;YAAK,WAAU;;8BACd,8OAAC;oBAAK,WAAU;8BAAwB;;;;;;8BACxC,8OAAC,qMAAA,CAAA,WAAQ;oBAAC,wBAAU,8OAAC;;;;;8BACnB,cAAA,8OAAC,sIAAA,CAAA,eAAY;wBAAC,QAAQ;;;;;;;;;;;8BAExB,8OAAC,wIAAA,CAAA,UAAO;oBAAC,WAAW;;;;;;8BACpB,8OAAC,sIAAA,CAAA,eAAY;;;;;;;;;;;;;;;;AAIrB;AAEA,SAAS;IACP,qBACE,8OAAC;QAAI,WAAU;;;;;;AAEnB","debugId":null}}]
}